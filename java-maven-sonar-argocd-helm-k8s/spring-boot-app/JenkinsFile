pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    PROJECT_DIR = 'java-maven-sonar-argocd-helm-k8s/spring-boot-app'
    SONAR_URL = "http://54.172.169.91:9000"
    DOCKER_IMAGE = "sanjayharish/my-spring-app:${BUILD_NUMBER}"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "sanjayhar"
  }

  stages {

    stage('Checkout') {
      steps {
        echo 'âœ… Code checked out'
        // git branch: 'main', url: 'https://github.com/sanjayhar/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build and Test') {
      steps {
        dir("${env.PROJECT_DIR}") {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_AUTH = credentials('sonarqube')
      }
      steps {
        dir("${env.PROJECT_DIR}") {
          sh '''
            mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH \
              -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        dir("${env.PROJECT_DIR}") {
          sh '''
            docker build -t $DOCKER_IMAGE .
            echo $REGISTRY_CREDENTIALS_PSW | docker login -u $REGISTRY_CREDENTIALS_USR --password-stdin
            docker push $DOCKER_IMAGE
          '''
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GITHUB_CRED = credentials('github')
      }
      steps {
        sh '''
          git config user.email "sanjay@example.com"
          git config user.name "Sanjay Harish"
          sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
          git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
          git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
          git push https://${GITHUB_CRED}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
        '''
      }
    }
  }
}
